/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.generated.routines.JFilmInStock;
import org.jooq.generated.routines.JFilmNotInStock;
import org.jooq.generated.routines.JGetCustomerBalance;
import org.jooq.generated.routines.JInventoryHeldByCustomer;
import org.jooq.generated.routines.JInventoryInStock;
import org.jooq.generated.routines.JRewardsReport;
import org.jooq.impl.AutoConverter;
import org.jooq.types.UByte;


/**
 * Convenience access to all stored procedures and functions in sakila.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>sakila.film_in_stock</code>
     */
    public static Integer filmInStock(
          Configuration configuration
        , Integer pFilmId
        , Integer pStoreId
    ) {
        JFilmInStock p = new JFilmInStock();
        p.setPFilmId(pFilmId);
        p.setPStoreId(pStoreId);

        p.execute(configuration);
        return p.getPFilmCount();
    }

    /**
     * Call <code>sakila.film_not_in_stock</code>
     */
    public static Integer filmNotInStock(
          Configuration configuration
        , Integer pFilmId
        , Integer pStoreId
    ) {
        JFilmNotInStock p = new JFilmNotInStock();
        p.setPFilmId(pFilmId);
        p.setPStoreId(pStoreId);

        p.execute(configuration);
        return p.getPFilmCount();
    }

    /**
     * Call <code>sakila.get_customer_balance</code>
     */
    public static BigDecimal getCustomerBalance(
          Configuration configuration
        , Integer pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Integer pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Get <code>sakila.get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Field<Integer> pCustomerId
        , Field<LocalDateTime> pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Call <code>sakila.inventory_held_by_customer</code>
     */
    public static Integer inventoryHeldByCustomer(
          Configuration configuration
        , Integer pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Integer pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>sakila.inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Field<Integer> pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Call <code>sakila.inventory_in_stock</code>
     */
    public static Byte inventoryInStock(
          Configuration configuration
        , Integer pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.inventory_in_stock</code> as a field.
     */
    public static Field<Byte> inventoryInStock(
          Integer pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>sakila.inventory_in_stock</code> as a field.
     */
    public static Field<Byte> inventoryInStock(
          Field<Integer> pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Call <code>sakila.rewards_report</code>
     */
    public static Integer rewardsReport(
          Configuration configuration
        , Integer minMonthlyPurchases
        , BigDecimal minDollarAmountPurchased
    ) {
        JRewardsReport p = new JRewardsReport();
        p.setMinMonthlyPurchases(minMonthlyPurchases);
        p.setMinDollarAmountPurchased(minDollarAmountPurchased);

        p.execute(configuration);
        return p.getCountRewardees();
    }
}
