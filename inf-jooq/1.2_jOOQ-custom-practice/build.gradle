buildscript {
	ext {
		jooqVersion = '3.19.5'
	}
}

plugins {
	id 'nu.studer.jooq' version '9.0'
}

group = 'org.sight'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


sourceSets {
	main {
		java {
			srcDirs = ["src/main/java", "src/generated"]
		}
	}
}

dependencies {
	implementation "org.jooq:jooq:${jooqVersion}"

	jooqGenerator project(':1.2_jOOQ-custom-practice:jooq-custom')
	jooqGenerator "org.jooq:jooq:${jooqVersion}"
	jooqGenerator "org.jooq:jooq-meta:${jooqVersion}"

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation ('org.springframework.boot:spring-boot-starter-jooq') {
		exclude group: 'org.jooq'
	}

	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

String dbUser   = System.properties["db-user"]   ?: "root"
String dbPasswd = System.properties["db-passwd"] ?: "root"

jooq {
	version = "${jooqVersion}"
	configurations {
		sakilaDB {
			generationTool {
				jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
					url = 'jdbc:mysql://localhost:3306'
					user = "${dbUser}"
					password = "${dbPasswd}"
				}

				generator {
					name = 'org.jooq.codegen.DefaultGenerator'

					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
						unsignedTypes = true
						schemata {
							schema {
								inputSchema = 'sakila'
							}
						}
					}

					generate {
						daos = true
						records = true
						fluentSetters = true
						javaTimeTypes = true
						deprecated = false
					}

					target {
						directory = 'src/generated'
					}

					// jooq-custom 내부의 설정
					strategy.name = 'jooq.custom.generator.JPrefixGeneratorStrategy'
				}
			}
		}
	}
}
