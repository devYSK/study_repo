/*
 * This file is generated by jOOQ.
 */
package com.uno.getinline.tables.records;


import com.uno.getinline.tables.Admin;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminRecord extends UpdatableRecordImpl<AdminRecord> implements Record8<Long, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>getinline.admin.id</code>.
     */
    public AdminRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>getinline.admin.email</code>.
     */
    public AdminRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>getinline.admin.nickname</code>.
     */
    public AdminRecord setNickname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.nickname</code>.
     */
    public String getNickname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>getinline.admin.password</code>.
     */
    public AdminRecord setPassword(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>getinline.admin.phone_number</code>.
     */
    public AdminRecord setPhoneNumber(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>getinline.admin.memo</code>.
     */
    public AdminRecord setMemo(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.memo</code>.
     */
    public String getMemo() {
        return (String) get(5);
    }

    /**
     * Setter for <code>getinline.admin.created_at</code>.
     */
    public AdminRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>getinline.admin.modified_at</code>.
     */
    public AdminRecord setModifiedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>getinline.admin.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Admin.ADMIN.ID;
    }

    @Override
    public Field<String> field2() {
        return Admin.ADMIN.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Admin.ADMIN.NICKNAME;
    }

    @Override
    public Field<String> field4() {
        return Admin.ADMIN.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Admin.ADMIN.PHONE_NUMBER;
    }

    @Override
    public Field<String> field6() {
        return Admin.ADMIN.MEMO;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Admin.ADMIN.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Admin.ADMIN.MODIFIED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getNickname();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getPhoneNumber();
    }

    @Override
    public String component6() {
        return getMemo();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getModifiedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getNickname();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getPhoneNumber();
    }

    @Override
    public String value6() {
        return getMemo();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getModifiedAt();
    }

    @Override
    public AdminRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AdminRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AdminRecord value3(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public AdminRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AdminRecord value5(String value) {
        setPhoneNumber(value);
        return this;
    }

    @Override
    public AdminRecord value6(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public AdminRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AdminRecord value8(LocalDateTime value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public AdminRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminRecord
     */
    public AdminRecord() {
        super(Admin.ADMIN);
    }

    /**
     * Create a detached, initialised AdminRecord
     */
    public AdminRecord(Long id, String email, String nickname, String password, String phoneNumber, String memo, LocalDateTime createdAt, LocalDateTime modifiedAt) {
        super(Admin.ADMIN);

        setId(id);
        setEmail(email);
        setNickname(nickname);
        setPassword(password);
        setPhoneNumber(phoneNumber);
        setMemo(memo);
        setCreatedAt(createdAt);
        setModifiedAt(modifiedAt);
    }
}
