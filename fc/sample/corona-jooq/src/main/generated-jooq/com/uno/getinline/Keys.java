/*
 * This file is generated by jOOQ.
 */
package com.uno.getinline;


import com.uno.getinline.tables.Admin;
import com.uno.getinline.tables.AdminPlaceMap;
import com.uno.getinline.tables.Event;
import com.uno.getinline.tables.Place;
import com.uno.getinline.tables.records.AdminPlaceMapRecord;
import com.uno.getinline.tables.records.AdminRecord;
import com.uno.getinline.tables.records.EventRecord;
import com.uno.getinline.tables.records.PlaceRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * getinline.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdminRecord> KEY_ADMIN_PRIMARY = Internal.createUniqueKey(Admin.ADMIN, DSL.name("KEY_admin_PRIMARY"), new TableField[] { Admin.ADMIN.ID }, true);
    public static final UniqueKey<AdminRecord> KEY_ADMIN_UC_ADMIN_EMAIL = Internal.createUniqueKey(Admin.ADMIN, DSL.name("KEY_admin_uc_admin_email"), new TableField[] { Admin.ADMIN.EMAIL }, true);
    public static final UniqueKey<AdminRecord> KEY_ADMIN_UC_ADMIN_NICKNAME = Internal.createUniqueKey(Admin.ADMIN, DSL.name("KEY_admin_uc_admin_nickname"), new TableField[] { Admin.ADMIN.NICKNAME }, true);
    public static final UniqueKey<AdminPlaceMapRecord> KEY_ADMIN_PLACE_MAP_PRIMARY = Internal.createUniqueKey(AdminPlaceMap.ADMIN_PLACE_MAP, DSL.name("KEY_admin_place_map_PRIMARY"), new TableField[] { AdminPlaceMap.ADMIN_PLACE_MAP.ID }, true);
    public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = Internal.createUniqueKey(Event.EVENT, DSL.name("KEY_event_PRIMARY"), new TableField[] { Event.EVENT.ID }, true);
    public static final UniqueKey<PlaceRecord> KEY_PLACE_PRIMARY = Internal.createUniqueKey(Place.PLACE, DSL.name("KEY_place_PRIMARY"), new TableField[] { Place.PLACE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AdminPlaceMapRecord, AdminRecord> FK_ADMINPLACEMAP_ON_ADMIN = Internal.createForeignKey(AdminPlaceMap.ADMIN_PLACE_MAP, DSL.name("FK_ADMINPLACEMAP_ON_ADMIN"), new TableField[] { AdminPlaceMap.ADMIN_PLACE_MAP.ADMIN_ID }, Keys.KEY_ADMIN_PRIMARY, new TableField[] { Admin.ADMIN.ID }, true);
    public static final ForeignKey<AdminPlaceMapRecord, PlaceRecord> FK_ADMINPLACEMAP_ON_PLACE = Internal.createForeignKey(AdminPlaceMap.ADMIN_PLACE_MAP, DSL.name("FK_ADMINPLACEMAP_ON_PLACE"), new TableField[] { AdminPlaceMap.ADMIN_PLACE_MAP.PLACE_ID }, Keys.KEY_PLACE_PRIMARY, new TableField[] { Place.PLACE.ID }, true);
    public static final ForeignKey<EventRecord, PlaceRecord> FK_EVENT_ON_PLACE = Internal.createForeignKey(Event.EVENT, DSL.name("FK_EVENT_ON_PLACE"), new TableField[] { Event.EVENT.PLACE_ID }, Keys.KEY_PLACE_PRIMARY, new TableField[] { Place.PLACE.ID }, true);
}
