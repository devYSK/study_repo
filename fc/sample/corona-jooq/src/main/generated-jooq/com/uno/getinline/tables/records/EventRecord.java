/*
 * This file is generated by jOOQ.
 */
package com.uno.getinline.tables.records;


import com.uno.getinline.constant.EventStatus;
import com.uno.getinline.tables.Event;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record11<Long, Long, String, EventStatus, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>getinline.event.id</code>.
     */
    public EventRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>getinline.event.place_id</code>.
     */
    public EventRecord setPlaceId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.place_id</code>.
     */
    public Long getPlaceId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>getinline.event.event_name</code>.
     */
    public EventRecord setEventName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.event_name</code>.
     */
    public String getEventName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>getinline.event.event_status</code>.
     */
    public EventRecord setEventStatus(EventStatus value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.event_status</code>.
     */
    public EventStatus getEventStatus() {
        return (EventStatus) get(3);
    }

    /**
     * Setter for <code>getinline.event.event_start_datetime</code>.
     */
    public EventRecord setEventStartDatetime(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.event_start_datetime</code>.
     */
    public LocalDateTime getEventStartDatetime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>getinline.event.event_end_datetime</code>.
     */
    public EventRecord setEventEndDatetime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.event_end_datetime</code>.
     */
    public LocalDateTime getEventEndDatetime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>getinline.event.current_number_of_people</code>.
     */
    public EventRecord setCurrentNumberOfPeople(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.current_number_of_people</code>.
     */
    public Integer getCurrentNumberOfPeople() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>getinline.event.capacity</code>.
     */
    public EventRecord setCapacity(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.capacity</code>.
     */
    public Integer getCapacity() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>getinline.event.memo</code>.
     */
    public EventRecord setMemo(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.memo</code>.
     */
    public String getMemo() {
        return (String) get(8);
    }

    /**
     * Setter for <code>getinline.event.created_at</code>.
     */
    public EventRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>getinline.event.modified_at</code>.
     */
    public EventRecord setModifiedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>getinline.event.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, String, EventStatus, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, String, EventStatus, LocalDateTime, LocalDateTime, Integer, Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Event.EVENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Event.EVENT.PLACE_ID;
    }

    @Override
    public Field<String> field3() {
        return Event.EVENT.EVENT_NAME;
    }

    @Override
    public Field<EventStatus> field4() {
        return Event.EVENT.EVENT_STATUS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Event.EVENT.EVENT_START_DATETIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Event.EVENT.EVENT_END_DATETIME;
    }

    @Override
    public Field<Integer> field7() {
        return Event.EVENT.CURRENT_NUMBER_OF_PEOPLE;
    }

    @Override
    public Field<Integer> field8() {
        return Event.EVENT.CAPACITY;
    }

    @Override
    public Field<String> field9() {
        return Event.EVENT.MEMO;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Event.EVENT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Event.EVENT.MODIFIED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPlaceId();
    }

    @Override
    public String component3() {
        return getEventName();
    }

    @Override
    public EventStatus component4() {
        return getEventStatus();
    }

    @Override
    public LocalDateTime component5() {
        return getEventStartDatetime();
    }

    @Override
    public LocalDateTime component6() {
        return getEventEndDatetime();
    }

    @Override
    public Integer component7() {
        return getCurrentNumberOfPeople();
    }

    @Override
    public Integer component8() {
        return getCapacity();
    }

    @Override
    public String component9() {
        return getMemo();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component11() {
        return getModifiedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPlaceId();
    }

    @Override
    public String value3() {
        return getEventName();
    }

    @Override
    public EventStatus value4() {
        return getEventStatus();
    }

    @Override
    public LocalDateTime value5() {
        return getEventStartDatetime();
    }

    @Override
    public LocalDateTime value6() {
        return getEventEndDatetime();
    }

    @Override
    public Integer value7() {
        return getCurrentNumberOfPeople();
    }

    @Override
    public Integer value8() {
        return getCapacity();
    }

    @Override
    public String value9() {
        return getMemo();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value11() {
        return getModifiedAt();
    }

    @Override
    public EventRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EventRecord value2(Long value) {
        setPlaceId(value);
        return this;
    }

    @Override
    public EventRecord value3(String value) {
        setEventName(value);
        return this;
    }

    @Override
    public EventRecord value4(EventStatus value) {
        setEventStatus(value);
        return this;
    }

    @Override
    public EventRecord value5(LocalDateTime value) {
        setEventStartDatetime(value);
        return this;
    }

    @Override
    public EventRecord value6(LocalDateTime value) {
        setEventEndDatetime(value);
        return this;
    }

    @Override
    public EventRecord value7(Integer value) {
        setCurrentNumberOfPeople(value);
        return this;
    }

    @Override
    public EventRecord value8(Integer value) {
        setCapacity(value);
        return this;
    }

    @Override
    public EventRecord value9(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public EventRecord value10(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EventRecord value11(LocalDateTime value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public EventRecord values(Long value1, Long value2, String value3, EventStatus value4, LocalDateTime value5, LocalDateTime value6, Integer value7, Integer value8, String value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Long id, Long placeId, String eventName, EventStatus eventStatus, LocalDateTime eventStartDatetime, LocalDateTime eventEndDatetime, Integer currentNumberOfPeople, Integer capacity, String memo, LocalDateTime createdAt, LocalDateTime modifiedAt) {
        super(Event.EVENT);

        setId(id);
        setPlaceId(placeId);
        setEventName(eventName);
        setEventStatus(eventStatus);
        setEventStartDatetime(eventStartDatetime);
        setEventEndDatetime(eventEndDatetime);
        setCurrentNumberOfPeople(currentNumberOfPeople);
        setCapacity(capacity);
        setMemo(memo);
        setCreatedAt(createdAt);
        setModifiedAt(modifiedAt);
    }
}
